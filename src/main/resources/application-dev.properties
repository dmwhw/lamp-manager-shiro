



###########################################
######## diy config
##########################################

myconfig.firmfile.upload.path=./firmFile




#配置Actuator访问的端口
management.port=9002
#Actuator采用非安全验证的方式访问，springboot 1.5X版本默认开启了Actuator的安全验证
management.security.enabled=false


########################################################
###logging config
########################################################

logging.config= classpath:log4j2.xml
logging.level.com.gzseeing.manager.mapper=debug




###datasource config

########################################################

##datasource setting
spring.datasource.url = jdbc:mysql://192.168.2.35:3306/lamp_dev?useSSL=false
#spring.datasource.url = jdbc:mysql://127.0.0.1:3306/lamp

#spring.datasource.url = jdbc:mysql://58.87.106.214:3306/lamp_dev
spring.datasource.username =root

spring.datasource.password =1234
#spring.datasource.password =58d183b0-493c-48b8-9610-a03a5cecb268

spring.datasource.driverClassName = com.mysql.jdbc.Driver

spring.datasource.max-active=20

spring.datasource.max-idle=8

spring.datasource.min-idle=8

spring.datasource.initial-size=10



##datasource setting




########################################################

###redis config

########################################################
#redis  
#redis数据库名称  从0到15,默认为db0  
spring.redis.database=0 
#redis服务器名称  
spring.redis.host=127.0.0.1
#redis服务器密码  
#spring.redis.password=123456  
#redis服务器连接端口号  
spring.redis.port=6379
#redis连接池设置  
spring.redis.pool.max-idle=8
spring.redis.pool.min-idle=0
spring.redis.pool.max-active=8
spring.redis.pool.max-wait=-1
#spring.redis.sentinel.master=  
#spring.redis.sentinel.nodes=  
spring.redis.timeout=60000





####################################################################

####shiro

####################################################################
spring.redis.shiro.host=127.0.0.1
spring.redis.shiro.port=6379
spring.redis.shiro.timeout=5000
#spring.redis.shiro.password

shiro.annotations.enabled=false

#################mqtt

#模块的开关
haowen.mqtt.starter.enable=true
#启动后是否自动连接
haowen.mqtt.starter.auto-connect-when-started=false


####连接参数
#url
haowen.mqtt.starter.mqtt-url=ssl://lamp.zkzztech.com:19111
#是否使用密码登录
haowen.mqtt.starter.use-auth=true
haowen.mqtt.starter.mqtt-user=admin_d
haowen.mqtt.starter.mqttpw=123456a
#clientid,空的话，用uuid
#haowen.mqtt.starter.client-id=
#连接超时时间
haowen.mqtt.starter.connect-time-out=10

######ssl的证书
#haowen.mqtt.starter.use-ssl=false
#haowen.mqtt.starter.ca-crt=classpath:ca.ini
#haowen.mqtt.starter.client-crt=classpath:clientcrt.ini
#haowen.mqtt.starter.client-key=classpath:clientkey.ini

######ssl的证书
haowen.mqtt.starter.ssl-strict=false
haowen.mqtt.starter.use-ssl=true
haowen.mqtt.starter.ca-crt=classpath:cacrt2.ini
haowen.mqtt.starter.client-crt=classpath:clientcrt2.ini
haowen.mqtt.starter.client-key=classpath:clientkey2.ini



####连接的属性
#是否接收离线消息。true不接受
haowen.mqtt.starter.clean-session=true
#心跳时间
haowen.mqtt.starter.keep-alive-time=30



###重连
#是否重连
haowen.mqtt.starter.re-connect=true
#重连的间隔
haowen.mqtt.starter.connect-re-try-interval=10000
#重连的最大次数
haowen.mqtt.starter.connect-re-try-max-times=10



###启动之后

#启动时订阅的主题，用逗号隔开
#haowen.mqtt.starter.on-started-subcribe-topics=233933df730941bda9399fc706183966/voice
#启动时订阅主题的服务质量，用逗号隔开
#haowen.mqtt.starter.on-started-subcribe-topics-qos=1



#是否打印接收到的消息
haowen.mqtt.starter.log-message-arrived=true
#是否打印接收到的消息内容
haowen.mqtt.starter.log-message-arrived-body=false


